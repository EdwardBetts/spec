openapi: 3.0.0
info:
  title: AssignedRights
  version: '1.0'
  description: Allows the creation and check of AssignedRights
servers: []
paths:
  '/assigned_rights/{id}':
    get:
      summary: Get AssignedRight by identifier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/right/AssignedRight.yaml
      operationId: get-assigned_right
      description: Get latest version of a given `AssignedRight` by its identifier
      requestBody: {}
      parameters: []
      tags:
        - read
    parameters:
      - schema:
          type: string
        name: id
        in: path
        description: 'Identifier for the assigned right. When not provided, the `right_spec`, `credential_class` and `credential_id` query params **must** be provided'
        required: true
  /assigned_rights:
    parameters: []
    post:
      summary: Create a new AssignedRight
      responses: {}
      operationId: post-assigned_right
      description: Create a new `AssignedRight`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/right/AssignedRight.yaml
      tags:
        - create
    get:
      summary: List AssignedRights
      operationId: list-assigned_rights
      responses:
        '200':
          description: OK
      description: Lists `AssignedRights` and allows filtering by combination of a `HolderCredential` and `RightSpecification`
      parameters:
        - schema:
            type: string
          in: query
          name: right_spec
          description: Unique identifier for a right specification (its latest version is assumed)
        - schema:
            type: string
          in: query
          name: credential_class
          description: Class name for credential
        - schema:
            type: string
          in: query
          name: credential_id
          description: Unique identifier for credential in given class
      tags:
        - list and check
components:
  schemas: {}

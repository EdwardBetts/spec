openapi: 3.0.0
info:
  title: APDS
  version: '1.0'
  description: |-
    Allows the standard CRUD operations, as well as listing/search of:

    * `Places` (and their `Occupancy`)
    * `Rates`
    * `RightSpecifications`
    * `AssignedRights`
    * `Sessions`
    * `Observations`
  contact: {}
tags:
  - name: create
    description: Create an assigned right
  - name: read
    description: Read an assigned right
  - name: update
    description: Update an assigned right
  - name: delete
    description: Delete an assigned right
  - name: list
    description: List (search) assigned rights
servers:
  - url: ''
paths:
  '/rights/assigned/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        description: 'Identifier for the assigned right. When not provided, the `right_spec`, `credential_class` and `credential_id` query params **must** be provided'
        required: true
    delete:
      summary: Delete AssignedRight
      operationId: delete-assigned_right
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                bad-request:
                  value:
                    status: error
                    code: 400
                    message: Did not provide version number
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                not-found:
                  value:
                    status: error
                    code: 404
                    message: Not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                conflict:
                  value:
                    status: error
                    code: 409
                    message: Outdated version number provided
      tags:
        - delete
      description: Delete an existing `Assigned Right`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/common/VersionedReference.yaml
        description: 'The final version of the `AssignedRight` should be sent, to confirm the client is acting based on updated information'
    put:
      summary: Update AssignedRight
      operationId: update-assigned_right
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                missing-data:
                  value:
                    status: error
                    code: 400
                    message: Missing required attributes
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                not-found:
                  value:
                    status: error
                    code: 404
                    message: Not found
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                conflict:
                  value:
                    status: error
                    code: 409
                    message: Outdated version number provided
      description: Update an existing `AssignedRight`
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/right/AssignedRight.yaml
        description: 'The new version of the `AssignedRight`, including only its changed attributes'
      tags:
        - update
    get:
      summary: Get an AssignedRight
      operationId: read-assigned_right
      description: Get latest version of a given `AssignedRight` by its identifier
      tags:
        - read
      parameters:
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/assigned_expand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/right/AssignedRight.yaml
  /rights/assigned:
    parameters: []
    post:
      summary: Create a new AssignedRight
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                created:
                  value:
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ../models/common/ResponseStatus.yaml
              examples:
                missing-data:
                  value:
                    status: error
                    code: 400
                    message: Missing required attributes
      operationId: create-assigned_right
      description: Create a new `AssignedRight`
      requestBody:
        description: This method allows an issuer to assign a parking right to a holder
        content:
          application/json:
            schema:
              $ref: ../models/right/AssignedRight.yaml
      tags:
        - create
    get:
      summary: List AssignedRights
      operationId: list-assigned_rights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/common/PaginatedListMeta.yaml
                  - type: object
                    properties:
                      deletedReferences:
                        type: array
                        description: 'This attribute will returned when the `modified_since` query parameter is used. It will contain references to deleted resources since the provided instant, that would have otherwise been included in the dataset (either at the top-level or as associated objects)'
                        items:
                          $ref: ../models/common/DeletedReference.yaml
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Result set with `AssignedRights` and requested expanded attributes
                        items:
                          $ref: ../models/right/AssignedRight.yaml
                    description: ''
      description: |-
        Lists `AssignedRights` and allows filtering by:

        * a combination of `HolderCredential` and `RightSpecification`, to check if a given credential has a given right to park
        * latitude, longitude, radius: to check for `AssignedRights` within a geographic area
        * a `Place`, to retrieve all assigned rights within a parking location
        * a modification instant: to only display changed resources from that point onwards

        Additionally, supports providing a comma-separated list of optional object attributes associated to an `AssignedRight` that should be included in the result set. If unused or left blank, `none` will be assumed.
      tags:
        - list
      parameters:
        - schema:
            type: string
          in: query
          name: right_spec
          description: Unique identifier for a `RightSpecification` (its latest version is assumed)
        - schema:
            type: string
          in: query
          name: credential_class
          description: Class name for credential
        - schema:
            type: string
          in: query
          name: credential_id
          description: Unique identifier for credential in given class
        - schema:
            type: string
          in: query
          name: place
          description: Unique identifier for a `Place` (its latest version is assumed)
        - $ref: '#/components/parameters/assigned_expand'
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/long'
        - $ref: '#/components/parameters/radius'
        - $ref: '#/components/parameters/mod'
components:
  parameters:
    lat:
      schema:
        type: number
        format: float
      in: query
      name: latitude
      description: Location latitude to use as filter (mandatory if longitude or radius are defined)
    long:
      schema:
        type: number
        format: float
      in: query
      name: longitude
      description: Location longitude to use as filter (mandatory if longitude or radius are defined)
    radius:
      schema:
        type: integer
        minimum: 0
      in: query
      name: radius
      description: Number of meters to use as search filter from given latitude and longitude (mandatory if latitude or longitude are defined)
    mod:
      schema:
        type: integer
        minimum: 0
      in: query
      name: modified_since
      description: "Reference timestamp to only display resources that have changed after that instant (represented as seconds, in UTC, since epoch).\n\n* If `expand` attributes are requested, then this timestamp will also applyto those objectsâ€™ modifications \n* When this attribute is used, the result-set will also include a list of deleted resourcesâ€™ IDs, so that the client can use this method to avoid storing stale data"
    assigned_expand:
      schema:
        type: string
        enum:
          - all
          - none
          - plannedUses
          - assignedRightIssuer
      description: Comma-separated list of optional object attributes associated to an `AssignedRight` that should be included in the result set
      name: expand
      in: query
    version:
      schema:
        type: integer
        minimum: 1
      in: query
      name: version
      description: 'Previous version number. Useful when a reference to a resource version is found in another dataset, and that version is no longer the latest one. Latest version is assumed when this parameter is not used.'
